# Переменные, которые можно использовать в этом же конфигурационном файле.
# Итоговый конфигурационный файл шаблонизируется при помощи Jinja2
variables:
    purpose: '...Назначение проекта...'
    database: '...имя_бд...'
    home_path: '...домашний_каталог_проекта...'
    home_path_src: '...корневой_каталог_исходников...'

    instance_name: '...имя_инстанса...'

    # Fully qualified domain name. По умолчанию вычисляется как DNS-имя текущей машины.
    # Для работы по ip можно задать значение '{{ host_ip }}'
    host_fqdn: 'localhost'
    # Домашняя директория, относительно которой хранятся все данные сервисов.
    # Используется только в конфигурационном файле.
    http_port: ...порт_для_инстанса...
    https_port: 443
    protocol: 'http'


# Пути и версии до сборок (билдов) продукта.
# Версия может быть не указана или указана частично. Если версия не указана - берётся последняя.
# В предопределенной переменной {{ local_builds_path }} хранится путь до локальный билдов "./etc/_builds/"
builds:
    # Билды платформы
    platform_builds:
        version: # auto
        path: '{{ local_builds_path }}/PlatformBuilds'
    # Билды DBConverter
    dbconverter_builds:
        version: # auto
        path: '{{ local_builds_path }}/DBConverter'
    # Билды распространяемых пакетов
    redist_builds:
        version: # auto
        path: '{{ local_builds_path }}/Redist'
logs_path: &logs
    LOGS_PATH: 'C:\rx_logs\{{ instance_name }}'
common_config: &base
    <<: *logs
    # Идентификатор системы. Выдается при первой поставке системы, используется для генерации штрихкодов.
    # Обязательно должен быть задан при первой установке.
    PRIMARY_TENANT: 'Local'
    QUEUE_CONNECTION_STRING: 'virtualhost=...виртуальный_хост...;hostname=...имя_сервера...;port=5672;username=...логин...;password=...пароль...;Exchange=RX42_Exchange_{{ instance_name }}'
    # mssql
    DATABASE_ENGINE: 'mssql'
    CONNECTION_STRING: 'data source=...сервер...;initial catalog={{ database }};user id=...логин...;Password=...пароль...'
    # postgres
    #CONNECTION_STRING: 'server=...сервер...;port=...порт...;database={{ database }};user id=...логин...;Password=...пароль...'
    #DATABASE_ENGINE: 'postgres'
    DATA_PROTECTION_CERTIFICATE_FILE: '...путь_к_сертификату...'
    DATA_PROTECTION_CERTIFICATE_FILE_PASSWORD: '...пароль_сертификата...'
    WEB_HOST_PATH_BASE: 'Client'
    UTC_OFFSET: '4'
    AUTHENTICATION_USERNAME: 'Service User'
    AUTHENTICATION_PASSWORD: '11111'
    HYPERLINK_SERVER: 'http://{{ host_fqdn }}:{{ http_port }}/Sungero'
    MONGODB_CONNECTION_STRING: 'mongodb://<...user...>:<...password...>@<...HOST_IP...>:27017'
    LANGUAGE: 'ru-ru'
    LOG_LANGUAGE: 'ru-ru'

# Настройки сервисов и утилит.
# all up использует состав и порядок сервисов из этой секции (без учёта сторонних сервисов - RabbitMQ, Redis, MongoDB)
services_config:
    SungeroWebServer: &SungeroWebServer
        <<: *base
        WEB_HOST_HTTP_PORT: # auto
        PREVIEW_ENABLED: 'true'
        PREVIEW_RELATIVE_PATH: '/Preview/'
        CENTRIFUGO_RELATIVE_PATH: '/Centrifugo/'
    SungeroWebClient:
        <<: *SungeroWebServer
        WEB_HOST_HTTP_PORT: # auto
    StorageService:
        <<: *base
        PORT: # auto
        STORAGE_PATH: '{{ home_path }}/storageservice'
    PreviewService:
        <<: *base
        PREVIEW_STORAGE_HOST: # auto
        TEMP_CONVERSION_FOLDER: '{{ home_path }}/previewservice/conversionresults'
        DOCUMENT_PROVIDER_CACHE_FOLDER: '{{ home_path }}/previewservice/sourcedocuments'
    PreviewStorage:
        <<: *base
        DEFAULT_SERVICE_PORT: # auto
        STORAGE_PATH: '{{ home_path }}/previewstorage'
    WorkflowProcessService:
        <<: *base
    DelayedOperationsService:
        <<: *base
    JobScheduler:
        <<: *base
    GenericService:
        <<: *base
        WORKER_SERVICE_ENABLED: true
        WORKFLOW_BLOCK_SERVICE_ENABLED: true
        REPORT_SERVICE_ENABLED: true
        WIDGET_SERVICE_ENABLED: true

        # WidgetsService settings
        # SungeroWorker settings
        # ReportService settings
        # WorkflowBlockService settings
    ClientsConnectionService:
        <<: *base
        QUEUE_RESPONSE_TIMEOUT: '00:00:30'
        SERVICE_PORT: # auto
        CENTRIFUGO_API_URI: # auto
        CENTRIFUGO_API_KEY: '...ключ_доступа_к_api_centrifugo...'
    SungeroCentrifugo:
        # Включает использование поля 'offset' клиент-серверного протокола. Рекомендуется оставить включённой
        'v3_use_offset': true
        # Ключ для доступа к API. Значение копируется из ConfigSettings сервиса CCS
        'api_key': '...ключ_доступа_к_api_centrifugo...'
        # Порт для всех конечных точек (endpoint'ов). Значение копируется из ConfigSettings сервиса CCS
        'port': # auto
        # Проксирование авторизации. Адрес конечной точки. По умолчанию http://clientsconnectionservice:15672/authorize
        'proxy_connect_endpoint': #auto
        # Проксирование авторизации. Таймаут в секундах
        'proxy_connect_timeout': 5
        # Серверная подписка на приватный канал пользователя
        'user_subscribe_to_personal': true
        # Секрет для генерации токенов
        #'admin_secret': ''
    IntegrationService:
        <<: *base
        WEB_HOST_HTTP_PORT: # auto
    LogService:
        <<: *base
        PORT: # auto
    SungeroHaproxy:
        haproxy_config: 'etc\haproxy.cfg'
        # Путь к файлу сертификата в формате PEM
        ssl_cert: ''
        http_port: '{{ http_port }}'
        https_port: '{{ https_port }}'
    IIS:
        site_name: 'DirectumRX Web Site'
        http_port: '{{ http_port }}'
    ServiceRunner:
        <<: *logs
        CONFIGS_PATH:  # auto
        PACKAGES_ZIP_PATH: # auto
        PACKAGES_BIN_PATH: # auto
        SERVICE_RUNNER_PORT: # auto
    DeploymentTool:
        <<: *base
        WEB_RELATIVE_PATH: 'Client'
        SERVER_HTTPS_PORT: '{{ https_port }}'
        SERVER_HTTP_PORT: '{{ http_port }}'
        SERVER_ROOT: '{{ host_fqdn }}'
        WEB_PROTOCOL: '{{ protocol }}'
    DeploymentToolUI:
        <<: *base
        WEB_RELATIVE_PATH: 'Client'
        SERVER_HTTPS_PORT: '{{ https_port }}'
        SERVER_HTTP_PORT: '{{ http_port }}'
        SERVER_ROOT: '{{ host_fqdn }}'
        WEB_PROTOCOL: '{{ protocol }}'
    DevelopmentStudio:
        <<: *base
        COMPANY_CODE: '...код_компании_разработчика...'
        SYSTEM_NAME: 'Develop'
        LOCAL_WEB_RELATIVE_PATH: 'Client'
        UNIQUE_NAMES_IN_OVERRIDES: true
        LOCAL_WEB_PROTOCOL: 'http'
        LOCAL_SERVER_HTTP_PORT: '{{ http_port }}'
        GIT_ROOT_DIRECTORY: '{{ home_path_src }}'
        REPOSITORIES:
            repository:
            -   '@folderName': 'Work'
                '@solutionType': 'Work'
                '@url': ''
            -   '@folderName': 'Box'
                '@solutionType': 'Base'
                '@url': ''
        SERVICE_RUNNER_CONFIG_PATH: '...корневой_каталог_инстсов_rx...\{{ instance_name }}\etc\_{{ instance_name }}\_services_config\ServiceRunner\_ConfigSettings.xml'

manage_applied_projects:
    postgresql_bin: 'C:\Program Files\PostgreSQL\14\bin'
    run_dds_after_set_project: 'true'
